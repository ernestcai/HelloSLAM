function [M,g_sph,votes] = extractManhattan(K,dList,Rraw,videopath)
    % Create a discrete gaussian sphere of 10201 vectors, and one more dimension for votes.
    M = [];
    [sx,sy,sz] = sphere(100);
    g_sph = [sx(:) sy(:) sz(:)]';
    votes = zeros(1,10201);
    % Vote to the gaussian sphere
    % lns: lines;lbg: beginning of line;led: end of line.
    for i = 1:size(dList,1)
       disp(strcat('Voting and Extracting: ',num2str(i)));
       load(fullfile(dList(i).folder,dList(i).name)); 
       lbg = [lines(1:2,:);ones(1,size(lines,2))];
       led = [lines(3:4,:);ones(1,size(lines,2))];
       R = rotationVectorToMatrix(Rraw(i,:));
       % X_homo = R'*inv(K)*X
       lbg_h = R'*K\lbg;
       led_h = R'*K\led;
       for j = 1:size(lines,1)
           a = lbg_h(:,j);
           b = led_h(:,j);
           pt = cross(a,b)./(norm(cross(a,b)));
           parfor k = 1:10201
               v = g_sph(:,k);
               % Calculate the angle between the norm and the sphere
               % vectors, if the angle is around 90 degrees, then vote the
               % length of the line to the corresponding votes.
               angle = acosd(dot(pt,v)/norm(pt)/norm(v));
               if (angle > 180)
                   angle = 360 - angle;
               end
               angle = abs(90-angle);
               if angle < rad2deg(0.02)
                   tmp = votes(1,k);
                   tmp = tmp + sqrt(dot(pt,pt));
                   votes(1,k) = tmp;
               end
           end
       end
       sorted_votes = sort(votes,'descend');
       for i = 1:400
           z = [0;0;1];
           idx = find(votes == sorted_votes(i));
           ptz = g_sph(:,votes(idx(1)));
           angle = acosd(dot(ptz,z)/norm(ptz)/norm(z));
           if (angle > 180)
               angle = 360 - angle; 
           end
           if (angle < 10)
               man_z = ptz;
           end
       end

       for i = 1:500
           idx = find(votes == sorted_votes(i));
           ptx = g_sph(:,votes(idx(1)));
           angle = acosd(dot(ptx,man_z)/norm(ptx)/norm(man_z));
           if (angle > 180)
               angle = 360 - angle; 
           end
           angle = abs(90 - angle);
           if (angle < 3)
               man_x = ptx;
               break
           end
       end

       man_y = cross(man_x,man_z)/norm(cross(man_x,man_z));
       
       M = [man_x man_y man_z];
       
       disp(strcat('Extracting:');
       disp(M);
       
       for j = 1:size(lines,1)
           lns{i} = lines;
           marker = zeros(1,size(lns{i},2));
           for k = 1:size(lns{i},1)
            a = lbg_h(:,j);
            b = led_h(:,j);
            pt = cross(a,b)./(norm(cross(a,b)));
            for k = 1:3
                m = M(:,k);
                angle = acosd(dot(pt,m)/norm(pt)/norm(m));
                if (angle > 180)
                    angle = 360 - angle;
                end
                angle = abs(90 - angle);
                if (angle < 5)
                    marker(:,j) = k;
                    break
                 end
            end
        end
        lns{i} = [lns{i};marker];
       end
       
    end
end